<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Api</name>
    </assembly>
    <members>
        <member name="T:FinanceApi.Controllers.BaseController">
            <summary>
            Base Controller
            </summary>
        </member>
        <member name="P:FinanceApi.Controllers.BaseController.UserId">
            <summary>
            Identificador do usuário logado
            </summary>
        </member>
        <member name="M:FinanceApi.Controllers.BaseController.ThrowValidationError(System.String)">
            <summary>
            Chamado quando ocorre de validação em entidades
            </summary>
        </member>
        <member name="T:FinanceApi.Controllers.CreditCardController">
            <summary>
            Cartões de crédito
            </summary>
        </member>
        <member name="M:FinanceApi.Controllers.CreditCardController.#ctor(Cashflow.Api.Service.CreditCardService)">
            <summary>
            Construtor
            </summary>    
        </member>
        <member name="M:FinanceApi.Controllers.CreditCardController.Get">
            <summary>
            Obter os cartões de crédito do usuário logado
            </summary>
            <returns></returns>
        </member>
        <member name="M:FinanceApi.Controllers.CreditCardController.Post(FinanceApi.Infra.Entity.CreditCard)">
            <summary>
            Inserir um novo cartão de crédito para o usuário logado
            </summary>
            <param name="card"></param>
        </member>
        <member name="M:FinanceApi.Controllers.CreditCardController.Put(FinanceApi.Infra.Entity.CreditCard)">
            <summary>
            Atualiza um cartão de crédito do usuário logado
            </summary>
            <param name="card"></param>
        </member>
        <member name="M:FinanceApi.Controllers.CreditCardController.Delete(System.Int32)">
            <summary>
            Remove um cartão de crédito do usuário logado
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:FinanceApi.Controllers.PaymentController">
            <summary>
            Pagamentos
            </summary>
        </member>
        <member name="M:FinanceApi.Controllers.PaymentController.#ctor(FinanceApi.Infra.AppDbContext)">
            <summary>
            Construtor
            </summary>    
        </member>
        <member name="M:FinanceApi.Controllers.PaymentController.Get">
            <summary>
            Obter os pagamentos usuário logado
            </summary>
            <returns></returns>
        </member>
        <member name="M:FinanceApi.Controllers.PaymentController.GetFuturePayments(System.DateTime)">
            <summary>
            Obter os pagamentos usuário logado
            </summary>
            <returns></returns>
        </member>
        <member name="M:FinanceApi.Controllers.PaymentController.Post(FinanceApi.Infra.Entity.Payment)">
            <summary>
            Inserir um novo pagamento para o usuário logado
            </summary>
            <param name="payment"></param>
        </member>
        <member name="M:FinanceApi.Controllers.PaymentController.Put(FinanceApi.Infra.Entity.Payment)">
            <summary>
            Atualizar um pagamento do usuário logado
            </summary>
            <param name="payment"></param>
        </member>
        <member name="M:FinanceApi.Controllers.PaymentController.Delete(System.Int32)">
            <summary>
            Remove um cartão de crédito do usuário logado
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:FinanceApi.Controllers.TokenController">
            <summary>
            Token
            </summary>
        </member>
        <member name="M:FinanceApi.Controllers.TokenController.#ctor(FinanceApi.Infra.AppDbContext,FinanceApi.Shared.AppConfiguration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FinanceApi.Controllers.TokenController.Post(FinanceApi.Models.LoginModel)">
            <summary>
            Obter o token
            </summary>
            <response code="500">Erro interno no servidor</response>
            <response code="401">Não autorizado</response>
        </member>
        <member name="T:FinanceApi.Infra.AppDbContext">
            Database context
        </member>
        <member name="M:FinanceApi.Infra.AppDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{FinanceApi.Infra.AppDbContext})">
            Constructor
        </member>
        <member name="P:FinanceApi.Infra.AppDbContext.User">
            User entities
        </member>
        <member name="P:FinanceApi.Infra.AppDbContext.Payment">
            Payment entities
        </member>
        <member name="P:FinanceApi.Infra.AppDbContext.CreditCard">
            Credit card entities
        </member>
        <member name="M:FinanceApi.Infra.AppDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            Configuration model builder
        </member>
        <member name="T:FinanceApi.Infra.Repository.BaseRepository`1">
            Base repository class
        </member>
        <member name="F:FinanceApi.Infra.Repository.BaseRepository`1._context">
            Context for database interactions
        </member>
        <member name="F:FinanceApi.Infra.Repository.BaseRepository`1._dbSet">
            To facilitate database interactions
        </member>
        <member name="M:FinanceApi.Infra.Repository.BaseRepository`1.#ctor(FinanceApi.Infra.AppDbContext)">
            Constructor
        </member>
        <member name="M:FinanceApi.Infra.Repository.BaseRepository`1.GetById(System.Int32)">
            Get entity by primary key
        </member>
        <member name="M:FinanceApi.Infra.Repository.BaseRepository`1.GetAll">
            Get all entities
        </member>
        <member name="M:FinanceApi.Infra.Repository.BaseRepository`1.GetSome(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            Get some entities
        </member>
        <member name="M:FinanceApi.Infra.Repository.BaseRepository`1.Add(`0)">
            Insert entity
        </member>
        <member name="M:FinanceApi.Infra.Repository.BaseRepository`1.Remove(System.Int32)">
            Remove Entity
        </member>
        <member name="M:FinanceApi.Infra.Repository.BaseRepository`1.Update(`0)">
            Update entity
        </member>
        <member name="M:FinanceApi.Infra.Repository.BaseRepository`1.Save">
            Save changes in database
        </member>
        <member name="T:FinanceApi.Infra.Repository.CreditCardRepository">
            Credit card repository
        </member>
        <member name="M:FinanceApi.Infra.Repository.CreditCardRepository.#ctor(FinanceApi.Infra.AppDbContext)">
            Constructor
        </member>
        <member name="M:FinanceApi.Infra.Repository.CreditCardRepository.GetByUserId(System.Int32)">
            Get credit cards of the user
        </member>
        <member name="M:FinanceApi.Infra.Repository.CreditCardRepository.HasPayments(System.Int32)">
            Check if credit card has linked payments
        </member>
        <member name="T:FinanceApi.Infra.Repository.ICreditCardRepository">
            Credit card repository contract
        </member>
        <member name="M:FinanceApi.Infra.Repository.ICreditCardRepository.GetByUserId(System.Int32)">
            Contract to obtain credit cards per user
        </member>
        <member name="M:FinanceApi.Infra.Repository.ICreditCardRepository.HasPayments(System.Int32)">
            Check if credit card has linked payments
        </member>
        <member name="T:FinanceApi.Infra.Repository.IPaymentRepository">
            Payment repository contract
        </member>
        <member name="T:FinanceApi.Infra.Repository.IRepository`1">
            Contract for all repositories
        </member>
        <member name="M:FinanceApi.Infra.Repository.IRepository`1.GetById(System.Int32)">
            Get by Id
        </member>
        <member name="M:FinanceApi.Infra.Repository.IRepository`1.GetAll">
            Get all entities
        </member>
        <member name="M:FinanceApi.Infra.Repository.IRepository`1.GetSome(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            Get some entities
        </member>
        <member name="M:FinanceApi.Infra.Repository.IRepository`1.Add(`0)">
            Insert entity
        </member>
        <member name="M:FinanceApi.Infra.Repository.IRepository`1.Update(`0)">
            Update entity
        </member>
        <member name="M:FinanceApi.Infra.Repository.IRepository`1.Remove(System.Int32)">
            Remove entity   
        </member>
        <member name="M:FinanceApi.Infra.Repository.IRepository`1.Save">
            Save changes in database
        </member>
        <member name="T:FinanceApi.Infra.Repository.IUserRepository">
            User repository contract
        </member>
        <member name="M:FinanceApi.Infra.Repository.IUserRepository.UserExists(System.Int32)">
            Verify if user exists
        </member>
        <member name="T:FinanceApi.Infra.Repository.PaymentRepository">
            Payment repository
        </member>
        <member name="M:FinanceApi.Infra.Repository.PaymentRepository.#ctor(FinanceApi.Infra.AppDbContext)">
            Constructor
        </member>
        <member name="T:FinanceApi.Infra.Repository.UserRepository">
            User repository
        </member>
        <member name="M:FinanceApi.Infra.Repository.UserRepository.#ctor(FinanceApi.Infra.AppDbContext)">
            Constructor
        </member>
        <member name="M:FinanceApi.Infra.Repository.UserRepository.UserExists(System.Int32)">
            Verify if user exists
        </member>
        <member name="T:Cashflow.Api.Service.CreditCardService">
            <summary>
            Credit card service
            </summary>
        </member>
        <member name="M:Cashflow.Api.Service.CreditCardService.#ctor(FinanceApi.Infra.Repository.ICreditCardRepository,FinanceApi.Infra.Repository.IUserRepository)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Cashflow.Api.Service.CreditCardService.GetByUser(System.Int32)">
            <summary>
            Get all credit cards of the logged in user
            </summary>
        </member>
        <member name="M:Cashflow.Api.Service.CreditCardService.Add(System.String,System.Int32)">
            <summary>
            Insert a new credit card for the logged in user
            </summary>
        </member>
        <member name="M:Cashflow.Api.Service.CreditCardService.Update(FinanceApi.Infra.Entity.CreditCard)">
            <summary>
            Update credit card
            </summary>
        </member>
        <member name="M:Cashflow.Api.Service.CreditCardService.Remove(System.Int32,System.Int32)">
            <summary>
            Remove a credit card
            </summary>
        </member>
    </members>
</doc>
